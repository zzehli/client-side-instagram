#!/bin/bash
# friendspacedb
# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
set -x
# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi
# Parse argument.  $1 is the first argument
case $1 in
  "create")
    sqlite3 var/friendspace.sqlite3 < sql/schema.sql
    sqlite3 var/friendspace.sqlite3 < sql/data.sql
    ;;
  "destroy")
    rm -rf var/friendspace.sqlite3
    ;;
  "reset")
    rm -rf var/friendspace.sqlite3
    sqlite3 var/friendspace.sqlite3 < sql/schema.sql
    sqlite3 var/friendspace.sqlite3 < sql/data.sql
    ;;
  "dump")
    sqlite3 -batch -line var/friendspace.sqlite3 'SELECT * FROM comments'
    sqlite3 -batch -line var/friendspace.sqlite3 'SELECT * FROM following'
    sqlite3 -batch -line var/friendspace.sqlite3 'SELECT * FROM likes'
    sqlite3 -batch -line var/friendspace.sqlite3 'SELECT * FROM posts'
    sqlite3 -batch -line var/friendspace.sqlite3 'SELECT * FROM users'
    ;;
  "random")
      SHUF=shuf
    # If shuf is not on this machine, try to use gshuf instead
    if ! type shuf 2> /dev/null; then
      SHUF=gshuf
    fi
    DB_FILENAME=var/friendspace.sqlite3
    FILENAMES="cameron-webber-ElS12fggAjs-unsplash.jpg
              documerica-cu8n4bHkcoI-unsplash.jpg
              peter-burdon-hz15RZZphpo-unsplash.jpg
              documerica-28sD7FV-8Ug-unsplash.jpg"
    for i in `seq 1 100`; do
      # echo $FILENAMES      print string
      # shuf -n1             select one random line from multiline input
      # awk '{$1=$1;print}'  trim leading and trailing whitespace
      # Use '${SHUF}' instead of 'shuf'
      FILENAME=`echo "$FILENAMES" | ${SHUF} -n1 | awk '{$1=$1;print}'`
      OWNER="awd"
      sqlite3 -echo -batch ${DB_FILENAME} "INSERT INTO posts(filename, owner) VALUES('${FILENAME}','${OWNER}');"
    done
    ;;
  *)
    usage
    exit 1
    ;;
esac